{"version":3,"sources":["core.scss","_variables.scss","core.css","../../../node_modules/hamburgers/_sass/hamburgers/hamburgers.scss","../../../node_modules/hamburgers/_sass/hamburgers/_base.scss","../../../node_modules/hamburgers/_sass/hamburgers/types/_spin.scss","_navigation_core.scss"],"names":[],"mappings":"AAAA,sEAAA;AACA,gFAAA;AACA,0DAAA;ACuDA;EACE,4CAAA;EACA,wCAAA;EACA,0CAAA;EACA,kDAAA;EACA,yCAAA;ACrDF;;ACRA;;;;;;EAAA;ACGA;EACE,gBAAA;EACA,qBAAA;EACA,eAAA;EAEA,oCAAA;EACA,0BAAA;EACA,kCAAA;EAGA,aAAA;EACA,cAAA;EACA,oBAAA;EACA,6BAAA;EACA,SAAA;EACA,SAAA;EACA,iBAAA;AFYF;AEVE;EAKI,YDT2B;ADiBjC;AEHI;EAKI,YDnByB;ADoBjC;AEGI;;;EAGE,2CAAA;AFDN;;AEMA;EACE,WHLsB;EGMtB,YAAA;EACA,qBAAA;EACA,kBAAA;AFHF;;AEMA;EACE,cAAA;EACA,QAAA;EACA,gBAAA;AFHF;AEKE;EAGE,WHnBoB;EGoBpB,WHnBqB;EGoBrB,2CHvBoB;EGwBpB,kBDlD6B;ECmD7B,kBAAA;EACA,8BAAA;EACA,0BAAA;EACA,gCAAA;AFLJ;AEQE;EAEE,WAAA;EACA,cAAA;AFPJ;AEUE;EACE,SAAA;AFRJ;AEWE;EACE,YAAA;AFTJ;;AG3EE;;EAAA;AAIE;EACE,0BAAA;EACA,kEAAA;AH6EN;AG3EM;EACE,wDAAA;AH6ER;AGzEM;EACE,6FAAA;AH2ER;AGrEM;EACE,yBAAA;EACA,uBAAA;EACA,+DAAA;AHuER;AGrEQ;EACE,MAAA;EACA,UAAA;EACA,0DAAA;AHuEV;AGnEQ;EACE,SAAA;EACA,yBAAA;EACA,2FAAA;AHqEV;;AInGA;EACE,aAAA;EACA,8BAAA;EACA,mBAAA;EACA,eAAA;EACA,MAAA;EACA,WAAA;EACA,yCAAA;EACA,yBAAA;EACA,qBAAA;EACA,aAAA;AJsGF;AIpGE;EACE,iDAAA;AJsGJ;;AIlGA;EACE,eAAA;EACA,YAAA;EACA,MAAA;EACA,aAAA;AJqGF;;AIlGA;EACE,YAAA;AJqGF;;AIlGA;EACE,0CAAA;EACA,kBAAA;EACA,uCAAA;EACA,iBAAA;EACA,mBAAA;EACA,UAAA;EACA,cAAA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;AJqGF;;AIlGA;EACE,kBAAA;EACA,aAAA;AJqGF;;AIlGA;EACE,kBAAA;EACA,cAAA;EACA,SAAA;EACA,UAAA;EACA,WAAA;EACA,gBAAA;AJqGF;AInGE;EACE,WAAA;EACA,aAAA;EACA,YAAA;EACA,qBAAA;EACA,8BAAA;EACA,6BAAA;EACA,eAAA;EACA,OAAA;AJqGJ","file":"../../../src/scss/core.css","sourcesContent":["/* Core / critical CSS only - especially for above the fold elements */\n/* loaded on every page (except the home page) for rendering priority elements */\n/* Keep it as small as possible because it gets inlined! */\n\n@import \"variables\";\n@import \"navigation_core\";\n\n\n\n","// The default spacers for bootstrap stop quite small so these are to allow larger padding using utility classes\n$spacers: (\n        0: 0,\n        1: .25rem,\n        2: .5rem,\n        3: 1rem,\n        4: 2rem,\n        5: 3rem,\n        6: 4rem,\n        7: 6rem,\n        8: 8rem,\n        9: 10rem\n);\n\n//Common Colours\n$white: #ffffff;\n$black: #000000;\n\n// Margin and padding for the elements (enabled on a per-element basis in the CMS)\n$element-padding: 2rem !default;\n$element-margin: 2rem !default;\n\n//Set up a few Bootstrap things\n$enable-dark-mode: false;\n$enable-important-utilities: false;\n$enable-gradients: false;\n$enable-negative-margins: false;\n$headings-font-family: var(--brand-titlefamilyname);\n$font-family-base: var(--brand-bodyfamilyname);\n$h1-font-size: var(--brand-h1size);\n$h2-font-size: var(--brand-h2size);\n$h3-font-size: var(--brand-h3size);\n$h4-font-size: var(--brand-h4size);\n$h5-font-size: var(--brand-h5size);\n$h6-font-size: var(--brand-h6size);\n$body-bg: $white;\n$btn-border-width: 1px;\n\n\n//Nav options\n$hamburger-types: (\n  spin\n);\n$hamburger-layer-color: var(--brand-burgercolour);\n$hamburger-active-layer-color: var(--brand-burgercolour);\n$hamburger-layer-width: 15px;\n$hamburger-layer-height: 2px;\n$hamburger-layer-spacing: 4px;\n$hamburger-padding-x: 8px;\n$hamburger-padding-y: 8px;\n\n$navigation-level1-size: 1.25rem;\n$navigation-level2-size: 1.15rem;\n\n\n\n//Set up the CSS variables we need\n:root {\n  --bs-heading-color: var(--brand-brandcolour);\n  --bs-body-color: var(--brand-bodycolour);\n  --bs-body-font-size: var(--brand-basesize);\n  --bs-body-font-family: var(--brand-bodyfamilyname);\n  --bs-body-bg: var(--brand-bodybackground);\n}\n","/* Core / critical CSS only - especially for above the fold elements */\n/* loaded on every page (except the home page) for rendering priority elements */\n/* Keep it as small as possible because it gets inlined! */\n:root {\n  --bs-heading-color: var(--brand-brandcolour);\n  --bs-body-color: var(--brand-bodycolour);\n  --bs-body-font-size: var(--brand-basesize);\n  --bs-body-font-family: var(--brand-bodyfamilyname);\n  --bs-body-bg: var(--brand-bodybackground);\n}\n\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n.hamburger {\n  padding: 8px 8px;\n  display: inline-block;\n  cursor: pointer;\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n}\n.hamburger:hover {\n  opacity: 0.7;\n}\n.hamburger.is-active:hover {\n  opacity: 0.7;\n}\n.hamburger.is-active .hamburger-inner,\n.hamburger.is-active .hamburger-inner::before,\n.hamburger.is-active .hamburger-inner::after {\n  background-color: var(--brand-burgercolour);\n}\n\n.hamburger-box {\n  width: 15px;\n  height: 14px;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: -1px;\n}\n.hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {\n  width: 15px;\n  height: 2px;\n  background-color: var(--brand-burgercolour);\n  border-radius: 4px;\n  position: absolute;\n  transition-property: transform;\n  transition-duration: 0.15s;\n  transition-timing-function: ease;\n}\n.hamburger-inner::before, .hamburger-inner::after {\n  content: \"\";\n  display: block;\n}\n.hamburger-inner::before {\n  top: -6px;\n}\n.hamburger-inner::after {\n  bottom: -6px;\n}\n\n/*\n * Spin\n */\n.hamburger--spin .hamburger-inner {\n  transition-duration: 0.22s;\n  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n.hamburger--spin .hamburger-inner::before {\n  transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;\n}\n.hamburger--spin .hamburger-inner::after {\n  transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n.hamburger--spin.is-active .hamburger-inner {\n  transform: rotate(225deg);\n  transition-delay: 0.12s;\n  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n.hamburger--spin.is-active .hamburger-inner::before {\n  top: 0;\n  opacity: 0;\n  transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;\n}\n.hamburger--spin.is-active .hamburger-inner::after {\n  bottom: 0;\n  transform: rotate(-90deg);\n  transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\n#main-navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background: var(--brand-navbarbackground);\n  transition: all 0.4s ease;\n  padding: 0.25rem 1rem;\n  z-index: 1000;\n}\n#main-navbar.scrolled {\n  background: var(--brand-navbarbackgroundscrolled);\n}\n\n#mainnav-holder {\n  position: fixed;\n  right: -100%;\n  top: 0;\n  z-index: 1050;\n}\n\n#site-logo {\n  margin: 1rem;\n}\n\n#navtoggler {\n  background-color: var(--brand-brandcolour);\n  border-radius: 50%;\n  border-color: var(--brand-burgercolour);\n  border-width: 2px;\n  border-style: solid;\n  padding: 0;\n  height: 37.5px;\n  width: 37.5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#nav-bun {\n  position: relative;\n  z-index: 1100;\n}\n\n#skipnav {\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n}\n#skipnav:focus, #skipnav:focus-visible {\n  width: auto;\n  z-index: 2000;\n  height: auto;\n  display: inline-block;\n  color: var(--brand-bodycolour);\n  background: var(--bs-body-bg);\n  padding: 0.5rem;\n  left: 0;\n}","@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 40px !default;\n$hamburger-layer-height        : 4px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #000 !default;\n$hamburger-layer-border-radius : 4px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-layer-color !default;\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  3dx,\n  3dx-r,\n  3dy,\n  3dy-r,\n  3dxy,\n  3dxy-r,\n  arrow,\n  arrow-r,\n  arrowalt,\n  arrowalt-r,\n  arrowturn,\n  arrowturn-r,\n  boring,\n  collapse,\n  collapse-r,\n  elastic,\n  elastic-r,\n  emphatic,\n  emphatic-r,\n  minus,\n  slider,\n  slider-r,\n  spin,\n  spin-r,\n  spring,\n  spring-r,\n  stand,\n  stand-r,\n  squeeze,\n  vortex,\n  vortex-r\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n@import \"types/3dx\";\n@import \"types/3dx-r\";\n@import \"types/3dy\";\n@import \"types/3dy-r\";\n@import \"types/3dxy\";\n@import \"types/3dxy-r\";\n@import \"types/arrow\";\n@import \"types/arrow-r\";\n@import \"types/arrowalt\";\n@import \"types/arrowalt-r\";\n@import \"types/arrowturn\";\n@import \"types/arrowturn-r\";\n@import \"types/boring\";\n@import \"types/collapse\";\n@import \"types/collapse-r\";\n@import \"types/elastic\";\n@import \"types/elastic-r\";\n@import \"types/emphatic\";\n@import \"types/emphatic-r\";\n@import \"types/minus\";\n@import \"types/slider\";\n@import \"types/slider-r\";\n@import \"types/spin\";\n@import \"types/spin-r\";\n@import \"types/spring\";\n@import \"types/spring-r\";\n@import \"types/stand\";\n@import \"types/stand-r\";\n@import \"types/squeeze\";\n@import \"types/vortex\";\n@import \"types/vortex-r\";\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","@use \"sass:math\";\n\n// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      }\n      @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: math.div($hamburger-layer-height, -2);\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n","@if index($hamburger-types, spin) {\n  /*\n   * Spin\n   */\n  .hamburger--spin {\n    .hamburger-inner {\n      transition-duration: 0.22s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::before {\n        transition: top 0.1s 0.25s ease-in,\n                    opacity 0.1s ease-in;\n      }\n\n      &::after {\n        transition: bottom 0.1s 0.25s ease-in,\n                    transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        transform: rotate(225deg);\n        transition-delay: 0.12s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::before {\n          top: 0;\n          opacity: 0;\n          transition: top 0.1s ease-out,\n                      opacity 0.1s 0.12s ease-out;\n        }\n\n        &::after {\n          bottom: 0;\n          transform: rotate(-90deg);\n          transition: bottom 0.1s ease-out,\n                      transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n    }\n  }\n}\n","//Styles specific to the nav - these are included in the core CSS.. don't get carried away!\n//This file only contains styles for the initial above-the-fold render.   Nav styles which are not\n//immediately visible are in the navigation_common file\n\n@import \"hamburgers/_sass/hamburgers/hamburgers\";\n\n#main-navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background: var(--brand-navbarbackground);\n  transition: all 0.4s ease;\n  padding: 0.25rem 1rem;\n  z-index: 1000;\n\n  &.scrolled {\n    background: var(--brand-navbarbackgroundscrolled);\n  }\n}\n\n#mainnav-holder {\n  position: fixed;\n  right: -100%;\n  top: 0;\n  z-index: 1050;\n}\n\n#site-logo {\n  margin: 1rem;\n}\n\n#navtoggler {\n  background-color: var(--brand-brandcolour);\n  border-radius: 50%;\n  border-color: var(--brand-burgercolour);\n  border-width: 2px;\n  border-style: solid;\n  padding: 0;\n  height: $hamburger-layer-width * 2.5;\n  width: $hamburger-layer-width * 2.5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#nav-bun {\n  position: relative;\n  z-index: 1100;\n}\n\n#skipnav {\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n\n  &:focus, &:focus-visible {\n    width: auto;\n    z-index: 2000;\n    height: auto;\n    display: inline-block;\n    color: var(--brand-bodycolour);\n    background: var(--bs-body-bg);\n    padding: 0.5rem;\n    left: 0;\n  }\n}\n"]}